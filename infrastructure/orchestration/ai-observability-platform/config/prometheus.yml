global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-observability-cluster'
    region: 'us-west-1'

rule_files:
  - "ai_alerting_rules.yml"

scrape_configs:
  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888']
    scrape_interval: 10s
    metrics_path: /metrics

  # AI Agent Health Monitor
  - job_name: 'ai-agent-health'
    static_configs:
      - targets: ['agent-health-monitor:8080']
    scrape_interval: 5s
    metrics_path: /metrics
    scrape_timeout: 4s

  # Anomaly Detection Service
  - job_name: 'anomaly-detector'
    static_configs:
      - targets: ['anomaly-detector:8081']
    scrape_interval: 10s
    metrics_path: /metrics

  # Emergence Detection Service
  - job_name: 'emergence-detector'
    static_configs:
      - targets: ['emergence-detector:8082']
    scrape_interval: 15s
    metrics_path: /metrics

  # Autoscaler Service
  - job_name: 'autoscaler'
    static_configs:
      - targets: ['autoscaler:8083']
    scrape_interval: 30s
    metrics_path: /metrics

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Kubernetes pods (for real deployment)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['ai-agents', 'monitoring']
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Federation from regional Prometheus instances
  - job_name: 'federate-region-east'
    scrape_interval: 30s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"ai-agent.*"}'
        - '{__name__=~"ai_.*"}'
        - '{__name__=~"emergence_.*"}'
        - '{__name__=~"anomaly_.*"}'
    static_configs:
      - targets:
        - 'prometheus-east.ai-platform.com:9090'

  - job_name: 'federate-region-west'
    scrape_interval: 30s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"ai-agent.*"}'
        - '{__name__=~"ai_.*"}'
        - '{__name__=~"emergence_.*"}'
        - '{__name__=~"anomaly_.*"}'
    static_configs:
      - targets:
        - 'prometheus-west.ai-platform.com:9090'

# Storage configuration for billion-scale metrics
storage:
  tsdb:
    retention: '30d'
    wal_compression: true

# Remote write for long-term storage
remote_write:
  - url: "http://prometheus-federation:9090/api/v1/write"
    queue_config:
      max_samples_per_send: 10000
      max_shards: 200
      capacity: 100000