import{r as o}from"./react-core-K6OrF0b-.js";import{s as l}from"./state-auth-BI8AObwG.js";const v=a=>{const[f,d]=o.useState(0),[g,s]=o.useState(""),[S,u]=o.useState(!0),[_,y]=o.useState([]),[P,h]=o.useState({totalSpent:0,tier:"Bronze",recentTransactions:[]});return o.useEffect(()=>{if(!a)return;(async()=>{try{u(!0);const{data:r,error:t}=await l.from("leaderboard_entries").select("*").eq("user_id",a).single();if(t&&t.code!=="PGRST116"&&console.error("Error fetching leaderboard data:",t),r){d(r.points||0);const e=r.level||1;e>=10?s("Master"):e>=7?s("Expert"):e>=4?s("Advanced"):e>=2?s("Intermediate"):s("Beginner")}const{data:n,error:i}=await l.from("transactions").select("*").eq("user_id",a).order("created_at",{ascending:!1}).limit(10);if(i&&console.error("Error fetching transaction data:",i),n){y(n);const e=n.reduce((m,E)=>E.transaction_type==="purchase"?m+(E.amount||0):m,0);let c="Bronze";e>=1e4?c="Premium":e>=5e3?c="Gold":e>=1e3&&(c="Silver"),h({totalSpent:e,tier:c,recentTransactions:n.slice(0,5)})}}catch(r){console.error("Error in usePoints hook:",r)}finally{u(!1)}})()},[a]),{points:f,rank:g,isLoading:S,transactions:_,spendingData:P,awardPoints:async(p,r=10)=>{if(!a)return!1;try{const{error:t}=await l.from("transactions").insert([{user_id:a,amount:r,transaction_type:"points_earned",metadata:{action_type:p}}]);if(t)return console.error("Error recording transaction:",t),!1;const{error:n}=await l.from("leaderboard_entries").update({points:f+r,updated_at:new Date().toISOString()}).eq("user_id",a);return n?(console.error("Error updating points:",n),!1):(d(i=>i+r),!0)}catch(t){return console.error("Error awarding points:",t),!1}}}};export{v as u};
